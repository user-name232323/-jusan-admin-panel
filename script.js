// ======== index.html ========
if (document.getElementById("loginForm")) {
  document.getElementById("loginForm").addEventListener("submit", async function(event) {
    event.preventDefault();

    const name = document.getElementById("login").value;
    const password = document.getElementById("password").value;

    try {
      const response = await fetch("https://jusik-servak-bd.onrender.com/admin_login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ name, password })
      });

      const result = await response.json();

      if (result.success === true) {
        localStorage.setItem("admin_logged_in", "true");
        window.location.href = "dashboard.html";
      } else {
        alert(result.message || "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", error);
      alert("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É");
    }
  });
}

// ======== dashboard.html ========
if (window.location.pathname.includes("dashboard.html")) {
  function logout() {
    localStorage.removeItem("admin_logged_in");
    window.location.href = "index.html";
  }

  function getStatusIdFromLabel(label) {
  const map = {
    "–í —Ä–∞–±–æ—Ç–µ": 2,
    "–ù–µ—Ç —Ç–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏": 3,
    "–ï—Å—Ç—å —Ç–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å": 4
  };
  return map[label] || null;
}

  // üëá –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  function showMessage(text) {
    let box = document.getElementById("message-box");
    if (!box) {
      box = document.createElement("div");
      box.id = "message-box";
      Object.assign(box.style, {
        position: "fixed",
        top: "10px",
        right: "10px",
        background: "#4caf50",
        color: "white",
        padding: "10px 20px",
        borderRadius: "5px",
        boxShadow: "0 2px 6px rgba(0,0,0,0.3)",
        fontWeight: "600",
        userSelect: "none",
        zIndex: "1000",
        display: "none",
      });
      document.body.appendChild(box);
    }
    box.textContent = text;
    box.style.display = "block";
    setTimeout(() => {
      box.style.display = "none";
    }, 3000);
  }

  async function updateStatus(id, statusLabel) {
    const status_id = getStatusIdFromLabel(statusLabel);

    if (!status_id) {
      alert("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: " + statusLabel);
      return;
    }

    try {
      const response = await fetch("https://jusik-servak-bd.onrender.com/update_status", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ request_id: id, status_id })
      });

      const result = await response.json();
      if (result.success) {
        showMessage(`–ó–∞—è–≤–∫–∞ #${id} –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${statusLabel}`);
        fetchRequests();
      } else {
        alert(result.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞");
    }
  }

  async function fetchRequests() {
    try {
      const response = await fetch("https://jusik-servak-bd.onrender.com/requests");
      const data = await response.json();

      const list = document.getElementById('requests-list');
      list.innerHTML = "";

      if (data.length === 0) {
        list.innerHTML = "<li>–ù–µ—Ç –∑–∞—è–≤–æ–∫</li>";
        return;
      }

      data.forEach(request => {
        const li = document.createElement('li');
        li.innerHTML = `
          <div>
            <strong>#${request.id}</strong> ‚Äî ${request.subject}<br>
            <em>${request.description}</em><br>
            <span><b>–°—Ç–∞—Ç—É—Å:</b> ${request.status}</span><br>
            <button class="btn-work" data-id="${request.id}">–ü—Ä–∏–Ω—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É</button>
            <button class="btn-no-tech" data-id="${request.id}">–û—Ç–∫–ª–æ–Ω–∏—Ç—å</button>
          </div>
          <hr>
        `;
        list.appendChild(li);
      });

      // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
      document.querySelectorAll(".btn-work").forEach(btn => {
        btn.onclick = () => updateStatus(btn.dataset.id, "–í —Ä–∞–±–æ—Ç–µ");
      });
      document.querySelectorAll(".btn-no-tech").forEach(btn => {
        btn.onclick = () => updateStatus(btn.dataset.id, "–ù–µ—Ç —Ç–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏");
      });

    } catch (err) {
      document.getElementById('requests-list').innerHTML = "<li>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</li>";
      console.error(err);
    }
  }

  if (localStorage.getItem("admin_logged_in") !== "true") {
    window.location.href = "index.html";
  } else {
    fetchRequests();
    setInterval(fetchRequests, 10000);
  }

  const avatar = document.querySelector(".user-avatar");
  if (avatar) {
    avatar.addEventListener("click", logout);
  }
}
